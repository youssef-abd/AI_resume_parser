worker_processes  1;

events {
  worker_connections  1024;
}

# Write PID to a writable location
pid /tmp/nginx.pid;

error_log /dev/stderr info;

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  access_log    /dev/stdout;
  sendfile        on;
  keepalive_timeout  65;
  server_tokens off;

  # Support websockets
  map $http_upgrade $connection_upgrade { default upgrade; '' close; }

  # Allow larger uploads
  client_max_body_size 200m;
  client_body_buffer_size 128k;

  # Proxy tuning
  proxy_read_timeout 600s;
  proxy_send_timeout 600s;
  proxy_connect_timeout 60s;

  # Use writable temp directories to avoid permission issues
  client_body_temp_path /tmp/nginx/client_body_temp 1 2;
  proxy_temp_path /tmp/nginx/proxy_temp;
  fastcgi_temp_path /tmp/nginx/fastcgi_temp;
  uwsgi_temp_path /tmp/nginx/uwsgi_temp;
  scgi_temp_path /tmp/nginx/scgi_temp;

  server {
    listen ${PORT};
    listen       [::]:${PORT};

    # Fast, static health endpoint for Space readiness
    location = /healthz {
      default_type application/json;
      add_header Cache-Control "no-store";
      return 200 '{"status":"ok","service":"nginx"}';
    }

    # Workaround: missing hashed font asset -> return 204 and cache
    location ~* ^/static/media/SourceSansVF-Upright\.ttf\.[A-Za-z0-9]+\.woff2$ {
      default_type font/woff2;
      add_header Cache-Control "public, max-age=86400" always;
      return 204;
    }

    # Route static JavaScript files to FastAPI for proper MIME type handling
    location ~* ^/static/js/.*\.js$ {
      proxy_pass         http://127.0.0.1:8000;
      proxy_http_version 1.1;
      proxy_set_header   Host $host;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Proto $scheme;
      proxy_buffering    off;
      add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    }

    # Route static CSS files to FastAPI for proper MIME type handling  
    location ~* ^/static/css/.*\.css$ {
      proxy_pass         http://127.0.0.1:8000;
      proxy_http_version 1.1;
      proxy_set_header   Host $host;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Proto $scheme;
      proxy_buffering    off;
      add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    }

    # Proxy FastAPI under /api/
    location /api/ {
      proxy_pass         http://127.0.0.1:8000/;
      proxy_http_version 1.1;
      proxy_set_header   Host $host;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Proto $scheme;
      proxy_set_header   Upgrade $http_upgrade;
      proxy_set_header   Connection $connection_upgrade;
      proxy_buffering    off;
    }

    # Allow large uploads and PUT to Streamlit internal upload endpoint
    location ^~ /_stcore/upload_file/ {
      proxy_pass         http://127.0.0.1:8501/;
      proxy_http_version 1.1;
      proxy_set_header   Host $host;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Proto $scheme;
      proxy_set_header   Upgrade $http_upgrade;
      proxy_set_header   Connection $connection_upgrade;
      client_max_body_size 200m;
      proxy_request_buffering off;
      proxy_buffering    off;
      proxy_read_timeout 600s;
      proxy_send_timeout 600s;
      add_header Access-Control-Allow-Origin "*" always;
      add_header Access-Control-Allow-Methods "GET, POST, PUT, OPTIONS" always;
      add_header Access-Control-Allow-Headers "Content-Type, X-Requested-With" always;
      if ($request_method = OPTIONS) { return 204; }
    }

    # General Streamlit internals
    location ^~ /_stcore/ {
      proxy_pass         http://127.0.0.1:8501/;
      proxy_http_version 1.1;
      proxy_set_header   Host $host;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Proto $scheme;
      proxy_set_header   Upgrade $http_upgrade;
      proxy_set_header   Connection $connection_upgrade;
      proxy_buffering    off;
      proxy_read_timeout 600s;
      proxy_send_timeout 600s;
      add_header Access-Control-Allow-Origin "*" always;
      add_header Access-Control-Allow-Methods "GET, POST, PUT, OPTIONS" always;
      add_header Access-Control-Allow-Headers "Content-Type, X-Requested-With" always;
      add_header Cache-Control "no-store, no-cache, must-revalidate" always;
      if ($request_method = OPTIONS) { return 204; }
    }

    # Static assets - proxy to Streamlit
    location ^~ /static/ {
      proxy_pass         http://127.0.0.1:8501/;
      proxy_http_version 1.1;
      proxy_set_header   Host $host;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Proto $scheme;
      proxy_buffering    off;
      add_header Cache-Control "no-store, no-cache, must-revalidate" always;
    }

    # Streamlit UI at root
    location / {
      proxy_pass         http://127.0.0.1:8501/;
      proxy_http_version 1.1;
      proxy_set_header   Host $host;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Proto $scheme;
      proxy_set_header   Upgrade $http_upgrade;
      proxy_set_header   Connection $connection_upgrade;
      proxy_buffering    off;
      add_header Cache-Control "no-store, no-cache, must-revalidate" always;
    }
  }
}